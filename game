cimport wchar
cimport ncurses
cimport string
cimport locale
cimport stddef
compile:
 gcc {} -lncurses -lncursesw
setlocale(LC_ALL,"")
initscr()
raw()
noecho()
#halfdelay(1)
#use_default_colors()
#start_color()
#for -1=w<8:
# for -1=e<8:
#  init_pair(w*20+e,w,e)
def void gput(c,v,h,e):
# attron(COLOR_PAIR(c))
 move(v,h)
######################
 wchar_t a[]={e,0}
 %*printw("%s",a)*%
# addch(e/256)
# move(v,h)
# addch(e%256)
# str a[4]
# a[0]=(char)(&e)[0]
# a[1]=(char)(&e)[1]
# a[2]=0
# a[3]=0
# addstr(a)
# addch(a[0])
# move(v,h)
# addch(a[1])
##########################
# attroff(COLOR_PAIR(c))
gint sc[4096][4096]
for w<4096:
 for e<4096:
  sc[w][e]=-1
def put(v,h,e):
 sc[v][h]=e
 if v%2:
  if sc[v][h]==-1 and sc[v-1][h]==-1:
   gput(-1,v,h/2,L' ')
  elif sc[v][h]==-1:
   gput(sc[v-1][h]*20-1,v/2,h,L'▀')
  elif sc[v-1][h]==-1:
   gput(sc[v][h]*20-1,v/2,h,L'▄')
  else:
   gput(sc[v][h]*20+sc[v-1][h],v/2,h,L'▄')
 else:
  if sc[v][h]==-1 and sc[v+1][h]==-1:
   gput(-1,v,h/2,L' ')
  elif sc[v][h]==-1:
   gput(sc[v+1][h]*20-1,v/2,h,L'▄')
  elif sc[v+1][h]==-1:
   gput(sc[v][h]*20-1,v/2,h,L'▀')
  else:
   gput(sc[v+1][h]*20+sc[v][h],v/2,h,L'▄')

for w<8:
 put(w,w,w)




getch()
endwin()
