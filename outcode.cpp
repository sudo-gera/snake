////63696d706f72742077636861720a63696d706f7274206e6375727365730a63696d706f727420737472696e670a63696d706f7274206c6f63616c650a63696d706f7274207374646465660a636f6d70696c653a0a20676363207b7d202d6c6e637572736573202d6c6e637572736573770a7365746c6f63616c65284c435f414c4c2c2222290a696e697473637228290a72617728290a6e6f6563686f28290a2368616c6664656c61792831290a237573655f64656661756c745f636f6c6f727328290a2373746172745f636f6c6f7228290a23666f72202d313d773c383a0a2320666f72202d313d653c383a0a232020696e69745f7061697228772a32302b652c772c65290a64656620766f6964206770757428632c762c682c65293a0a2320617474726f6e28434f4c4f525f50414952286329290a206d6f766528762c68290a232323232323232323232323232323232323232323230a2077636861725f7420615b5d3d7b652c307d0a20252a7072696e747728222573222c61292a250a2320616464636828652f323536290a23206d6f766528762c68290a23206164646368286525323536290a232073747220615b345d0a2320615b305d3d286368617229282665295b305d0a2320615b315d3d286368617229282665295b315d0a2320615b325d3d300a2320615b335d3d300a23206164647374722861290a2320616464636828615b305d290a23206d6f766528762c68290a2320616464636828615b315d290a23232323232323232323232323232323232323232323232323230a2320617474726f666628434f4c4f525f50414952286329290a67696e742073635b343039365d5b343039365d0a666f7220773c343039363a0a20666f7220653c343039363a0a202073635b775d5b655d3d2d310a6465662070757428762c682c65293a0a2073635b765d5b685d3d650a206966207625323a0a202069662073635b765d5b685d3d3d2d3120616e642073635b762d315d5b685d3d3d2d313a0a20202067707574282d312c762c682f322c4c272027290a2020656c69662073635b765d5b685d3d3d2d313a0a202020677075742873635b762d315d5b685d2a32302d312c762f322c682c4c27e2968027290a2020656c69662073635b762d315d5b685d3d3d2d313a0a202020677075742873635b765d5b685d2a32302d312c762f322c682c4c27e2968427290a2020656c73653a0a202020677075742873635b765d5b685d2a32302b73635b762d315d5b685d2c762f322c682c4c27e2968427290a20656c73653a0a202069662073635b765d5b685d3d3d2d3120616e642073635b762b315d5b685d3d3d2d313a0a20202067707574282d312c762c682f322c4c272027290a2020656c69662073635b765d5b685d3d3d2d313a0a202020677075742873635b762b315d5b685d2a32302d312c762f322c682c4c27e2968427290a2020656c69662073635b762b315d5b685d3d3d2d313a0a202020677075742873635b765d5b685d2a32302d312c762f322c682c4c27e2968027290a2020656c73653a0a202020677075742873635b762b315d5b685d2a32302b73635b765d5b685d2c762f322c682c4c27e2968427290a0a666f7220773c383a0a2070757428772c772c77290a0a0a0a0a676574636828290a656e6477696e28290a
#include <stddef.h>
#include <string.h>
#include <wchar.h>
#include <locale.h>
#include <ncurses.h>
 long long int sc [ 4096 ] [ 4096 ];
void gput(auto c,auto v,auto h,auto e){
 move ( v , h );
 wchar_t a [ ] = { e , 0 };
 printw("%s",a);}
auto put(auto v,auto h,auto e){
 sc [ v ] [ h ] = e;
 if(v % 2 ){
  if(sc [ v ] [ h ] == - 1 && sc [ v - 1 ] [ h ] == - 1 ){
   gput ( - 1 , v , h / 2 , L' ' );}
  else if(sc [ v ] [ h ] == - 1 ){
   gput ( sc [ v - 1 ] [ h ] * 20 - 1 , v / 2 , h , L'▀' );}
  else if(sc [ v - 1 ] [ h ] == - 1 ){
   gput ( sc [ v ] [ h ] * 20 - 1 , v / 2 , h , L'▄' );}
  else{
   gput ( sc [ v ] [ h ] * 20 + sc [ v - 1 ] [ h ] , v / 2 , h , L'▄' );}}
 else{
  if(sc [ v ] [ h ] == - 1 && sc [ v + 1 ] [ h ] == - 1 ){
   gput ( - 1 , v , h / 2 , L' ' );}
  else if(sc [ v ] [ h ] == - 1 ){
   gput ( sc [ v + 1 ] [ h ] * 20 - 1 , v / 2 , h , L'▄' );}
  else if(sc [ v + 1 ] [ h ] == - 1 ){
   gput ( sc [ v ] [ h ] * 20 - 1 , v / 2 , h , L'▀' );}
  else{
   gput ( sc [ v + 1 ] [ h ] * 20 + sc [ v ] [ h ] , v / 2 , h , L'▄' );}}}
int main(){
 
 
 
 
 
 setlocale ( LC_ALL , " " );
 initscr ( );
 raw ( );
 noecho ( );
 long long int w ;
 for(w =0;w < 4096;w ++){
  long long int e ;
  for(e =0;e < 4096;e ++){
   sc [ w ] [ e ] = - 1;}}
 for(w =0;w < 8;w ++){
  put ( w , w , w );}
 getch ( );
 endwin ( );
 }
